<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAW
        JQAAFiUBSVIk8AAAB61JREFUaEPtWFtsFFUY5qKAKOWmeCuYBlG0IiCKomIgikSMqDH7QMKLQV6IMemD
        JvBgGkHaEGjiA0GbIi9VcYlyqZoKBkRCKZdyEZZL2Urp9rbddtttd3ZmdnZ3/L7TM5vt7s6ywJbE2C/5
        sp0z5/zn/89/Of902BCGMIQhDGEIQ0iCaZoLwKXy8b8BKgw6QRcYADX5dzXoAEfLec+BFSDfWRww544C
        m+aBxeCN4AY5j4bZgXPypejBBzZjqNRw5xzCAw6uEdhgNMiQYagMBirkVoMDbFDWv8+ggWE2XW6XW0Aw
        E9XUIjHTEzTK9jeHHJe6w3lH2tUFdZ3aKncgXBM0opwSR3so4moOGqtKznY7fvcojrZQpEKPxuRbWzjk
        lrkDhJZQMhR3n+3UFsjhAYCiedf6jGLo5+fc631GRXMw8oB8Hceh1tDSViXCpLWDU07NDSBwOsiDN+sD
        4bTKJyJoxJbxkHv0aKBFiaQNh1+blNmhSEwR6qYi5waIUnnBr6+TQzdErVcVa2CAbVLWeNXNnJMGuQ0h
        CBSxf7RdzfqGPd6h5XXDA34t6sbfaS+pfdeVeZSbhA4wJexuCxDIG9OUj1nD5dedAT1q/tjQVyiHUoAw
        o+hElMlXuQOE3pIBSGrhOSCtAfDMDPk+Eavk69wBQkXtP9Op3VST1nQDA050aFvl+0TwHiiSU3IDCFxF
        yU19xudyKCugYjkVI2b+1RZKMcDVrS/y69FMvVHuPAFh+WAASelDdVkohzMC4ZOPBDYN1NMjbWr8RDl+
        zKuu6w1Hs2lFiuWy2weEraTEcDR2UI3EJsnhtMDtPBoll20z55u4F8y+cNR13q+78OwRF0p2yF1FgqAi
        IRKAAU3llwK2XeOVnnAZVfSGIp7DbaqjvifsRD6YMIy3s3kVofV3l/4VPGR3kSViqxR7a4AAhk9KA8dT
        7FQjP0PRFXjkB4kDMV2Ek2ZLLNDYZ2S8+P5oCeUHw9EzWTjk1lpsLOQHi+j5sZFyuSdcgWaMbs0KMDKA
        nqei9Gy37dfWeb82CQn9g1xih5tPaCyi8nVcjZAJoHeZz3F0l3FvML5PdmjV57t0J5WVwwIIm+oONeLh
        6SIf9iJp7xGC0wCeLMCFlympb743wiKRhNj/ANrfR+UwL595LI0EW+cDzf0lEvEc/7SkMr81KfmYm48E
        ruJYi2JUfX2xJ08ISYMd9b0zQlJuMmKx2C5MGQEOF5NvBKxhTGssdQiB2XJYgH0NvCBaYZy6G2VRhAfG
        4wYgeeMnhjkT4Kmf+A3wT6/xLWRSkbSAx6yLbwAi0eifO3fvHY8ptmsHAGtqGB6oHB/IoQE43BZaQ8Go
        Ni45NAxe4TeySe8gZN6UwwL86IEHPJAZrvVq78nhFKC5c8BAihkAPRw+8NHq1RMx5S4wsxFwl1AkEI5W
        y6G0wKVmtimRuAHfu3sL2ZghnmuosByOw6dGF/D7APTxMpPDKYChou+yoOm6t6Sk5AW8ogH0dsZQGg4D
        RH+C083Yj7QqhhMl04+vq0f4fKlbL4LTzDqfZlsx4NFSyoaHbG9YyIyHUUBRO9Z+sXElhh8Hp4AsBCNB
        ewOwztWsGObua0HbFpigu9kqowKJiwanWgOvmfi1TdTjXq0AOaHgvgggj3hQjoMtIcf2y72OC/7+Lz0c
        RDyXvvluVymGXgWfBllI7gMZRmkNGNHu9T6FdWEcZBVikRMzAnMOs1Se69IXI0mVhl5js3xli4vdetpE
        TUZF5c4tmP4WuBicAxaADKNRYEoe0KKRTU1Nc7gYtT2ruotY/wwnynCrwV2hne3UeVIZsacxyP8pDUAs
        ZsZOXqw/fKC2bt/+2tNVzj37to0YM3Y5pi8D3wCZA0+A7IvGgClhJAxwu91zKbChN1yDHmZe/yt74A4o
        QO1WWLHgiYxJnwjEuVDcQltb+7mJkya/i1dU2OLb8pcV7WWQIc18GwumhJEwoLKycoqq6YekXAHENMsp
        b92jeHQiAZ2o5+zzmbQOeEv0Pvh8zPq6x93CJQJXGj3HZz0/nx/xS8DXJXnqfKbyfGZ+PANaeXA3mGoA
        OKp4Y+nUhmuNRa2trWVuT8sOf6DvtKqq7lAo5O5VVI8RiepybwH0SPIv8c9ZF8LIhQQ9ib83IEeKqz1K
        MQxmYhaichWuPdFViPEzXBBUte6F7zhWYN9F4CvgS5JUmM/89uAvo2Em+DB4L5g2kZkYNIIxxkoyGXwI
        nAo+BhaMn/HszPWbtry2ffv2JeXl5Usr9x/5pL3DV+Xz+aq9Hb79DV4/FbcFP25wS4tO1ohElPUbvvwQ
        cl8E54IMkSdBxjp/+TwL5MlzbBrI75C0OWDB8gRdxEuDdZcuo0G8yi1OAFkRaCTrM0+G8UkXC44cO27a
        tp27l586dWpNbW3tx4eOnfj0zNXGbT09Pb80trZXbtpa/j7mUVH+44vK8bDuB6kkfx+UYySTl3ta8Z/x
        NqYRljc4mcawdJE0KpE0kEJp5DhJGmsZnGgkFaGhFvlMJaks53Et5fGE+ctQoVySe3CcumS8iRPBScnk
        4kRaRlrkBomk0ZZCVIKkYqT1zPc8DK6nPIuJcq2xrJXPFskGJjPZ2GQmvk+3Ppl3HOmUsOP/DcOG/QsS
        K4ItUQfWsgAAAABJRU5ErkJggg==
</value>
  </data>
</root>